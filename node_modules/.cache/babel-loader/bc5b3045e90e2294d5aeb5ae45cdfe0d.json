{"ast":null,"code":"var tutorDetails=[// MONDAY\n{name:\"Shunzhi Yu\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"11:00-12:30\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'},{name:\"Elias Haddad\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"11:00-13:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240'},{name:\"Xi Chen\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"13:00-15:00\"}],subjects:'CSC 161, CSC 171, CSC 172, MATH 150'},{name:\"Ashaz Rahman\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"14:00-16:00\"}],subjects:'CSC 161, MATH 141/161'},{name:\"Amy Yu\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"15:00-17:00\"}],subjects:'CSC 171, CSC 172, MATH 150, MATH 165'},{name:\"Bob Wang\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Monday\",time:\"17:00-19:00\"}],subjects:'CSC 161, CSC 171, CSC 240, MATH 141/161, MATH 142/162, MATH 150, MATH/STT 201'},// TUESDAY\n{name:\"Emily Lin\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"12:00-13:00\"}],subjects:'CSC 161, CSC 171'},{name:\"Emma Buller\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"12:00-13:00\"}],subjects:'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'},{name:\"Aryan Raj Dhawan\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"12:00-13:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'},{name:\"Dylan McKellips\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"14:00-15:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240, CSC 242, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165, MATH/STT 201'},{name:\"Zachary Tan\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"14:00-15:00\"}],subjects:'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'},{name:\"Desmond Wang\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"15:30-16:30\"}],subjects:'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'},{name:\"Jerry Hu\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Tuesday\",time:\"16:00-18:00\"}],subjects:'CSC 171, CSC 172, MATH 150, MATH 165'},// Wednesday\n{name:\"Shunzhi Yu\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Wednesday\",time:\"12:00-14:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'},// Thursday\n{name:\"Lucy Yang\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"11:00-12:00\"}],subjects:'CSC 161, CSC 171, CSC 173, CSC 262'},{name:\"Emma Buller\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"12:00-13:00\"}],subjects:'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'},{name:\"Aryan Raj Dhawan\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"12:00-13:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'},{name:\"Wendy Humphreys\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"11:00-13:00\"}],subjects:'CSC 171, CSC 172, MATH 141/161, MATH 142/162'},{name:\"Victoria Li\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"13:00-15:00\"}],subjects:'CSC 161, CSC 171, CSC 172'},{name:\"Tora Ozawa\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Thursday\",time:\"16:00-17:00\"}],subjects:'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'},//Friday\n{name:\"Wentao Jiang\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Friday\",time:\"13:30-14:30\"}],subjects:'CSC 161, CSC 210, CSC 240, CSC 242, CSC 254, CSC 282, CSC 245, DSCC 201, CSC 170, STAT 212/213, MATH 150, MATH 165, MATH/STT 201'},{name:\"Zachary Tan\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Friday\",time:\"14:00-15:00\"}],subjects:'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'},{name:\"Xi Chen\",location:\"Wegmans 2007\",password:\"\",schedule:[{day:\"Friday\",time:\"17:00-18:00\"}],subjects:'CSC 161, CSC 171, CSC 172, MATH 150'}];// This function checks the tutoring schedule for the week\nvar weeklySchedule=function weeklySchedule(){var weekMap={Sunday:[],Monday:[],Tuesday:[],Wednesday:[],Thursday:[],Friday:[],Saturday:[]};tutorDetails.map(function(eachTutor){eachTutor.schedule.map(function(eachDay){var dayForTutor=eachDay.day;weekMap[dayForTutor].push(eachTutor);});});return weekMap;};// This function checks the tutoring schedule for a particular day\nvar dataToSend=function dataToSend(){var dateRightNow=new Date();var currentData=[];tutorDetails.map(function(eachTutor){if(checkDay(eachTutor)){//Makes a copy of the object so that only today's times are shown\nvar toAppend={};toAppend.name=eachTutor.name;toAppend.location=eachTutor.location;toAppend.password=eachTutor.password;toAppend.subjects=eachTutor.subjects;toAppend.schedule=[];eachTutor.schedule.map(function(eachDay){if(dateRightNow.getDay()===convertDay(eachDay.day)){toAppend.schedule.push({\"day\":eachDay.day,\"time\":eachDay.time});}});currentData.push(toAppend);}});return currentData;};var checkDay=function checkDay(specificTutor){var currentDate=new Date();var toSend=false;specificTutor.schedule.map(function(scheduleDetail){var scheduleHour=parseInt(scheduleDetail.time.split(\":\")[0]);var scheduleMinute=parseInt(scheduleDetail.time.split(\":\")[1]);var scheduleTime=scheduleHour*60+scheduleMinute;var currentHour=currentDate.getHours();var currentMinute=currentDate.getMinutes();var currentTimeinMinutes=currentHour*60+currentMinute;if(currentDate.getDay()===convertDay(scheduleDetail.day)){if(currentTimeinMinutes<scheduleTime+60){toSend=true;}}});return toSend;};var convertDay=function convertDay(dateofInterest){if(dateofInterest===\"Sunday\")return 0;else if(dateofInterest===\"Monday\")return 1;else if(dateofInterest===\"Tuesday\")return 2;else if(dateofInterest===\"Wednesday\")return 3;else if(dateofInterest===\"Thursday\")return 4;else if(dateofInterest===\"Friday\")return 5;else if(dateofInterest===\"Saturday\")return 6;};export default tutorDetails;export{dataToSend};export{weeklySchedule};","map":{"version":3,"sources":["/Users/gigipan/Desktop/official-csug-website/src/assets/Components/TutoringComponent/index.data.jsx"],"names":["tutorDetails","name","location","password","schedule","day","time","subjects","weeklySchedule","weekMap","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","map","eachTutor","eachDay","dayForTutor","push","dataToSend","dateRightNow","Date","currentData","checkDay","toAppend","getDay","convertDay","specificTutor","currentDate","toSend","scheduleDetail","scheduleHour","parseInt","split","scheduleMinute","scheduleTime","currentHour","getHours","currentMinute","getMinutes","currentTimeinMinutes","dateofInterest"],"mappings":"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","sourcesContent":["const tutorDetails = [\n    // MONDAY\n    {\n        name: \"Shunzhi Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"11:00-12:30\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n    },\n    {\n        name: \"Elias Haddad\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"11:00-13:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240'\n    },\n    {\n        name: \"Xi Chen\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"13:00-15:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n    },\n    {\n        name: \"Ashaz Rahman\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"14:00-16:00\" }],\n        subjects: 'CSC 161, MATH 141/161'\n    },\n    {\n        name: \"Amy Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"15:00-17:00\" }],\n        subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n    },\n    {\n        name: \"Bob Wang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"17:00-19:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 240, MATH 141/161, MATH 142/162, MATH 150, MATH/STT 201'\n    },\n\n    // TUESDAY\n    {\n        name: \"Emily Lin\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171'\n    },\n    {\n        name: \"Emma Buller\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n    },\n    {\n        name: \"Aryan Raj Dhawan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Dylan McKellips\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240, CSC 242, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165, MATH/STT 201'\n    },\n    {\n        name: \"Zachary Tan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n    },\n    {\n        name: \"Desmond Wang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"15:30-16:30\"}],\n        subjects: 'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Jerry Hu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"16:00-18:00\"}],\n        subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n    },\n    \n    // Wednesday\n    {\n        name: \"Shunzhi Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Wednesday\", time: \"12:00-14:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n    },\n\n    // Thursday\n    {\n        name: \"Lucy Yang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"11:00-12:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 173, CSC 262'\n    },\n    {\n        name: \"Emma Buller\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n    },\n    {\n        name: \"Aryan Raj Dhawan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Wendy Humphreys\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"11:00-13:00\"}],\n        subjects: 'CSC 171, CSC 172, MATH 141/161, MATH 142/162'\n    },\n    {\n        name: \"Victoria Li\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"13:00-15:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172'\n    },\n    {\n        name: \"Tora Ozawa\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"16:00-17:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n\n    //Friday\n    {\n        name: \"Wentao Jiang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Friday\", time: \"13:30-14:30\"}],\n        subjects: 'CSC 161, CSC 210, CSC 240, CSC 242, CSC 254, CSC 282, CSC 245, DSCC 201, CSC 170, STAT 212/213, MATH 150, MATH 165, MATH/STT 201'\n    },\n    {\n        name: \"Zachary Tan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Friday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n    },\n    {\n        name: \"Xi Chen\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Friday\", time: \"17:00-18:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n    }\n    \n    \n]\n// This function checks the tutoring schedule for the week\nconst weeklySchedule = () => {\n    var weekMap = {\n        Sunday: [],\n        Monday: [],\n        Tuesday: [],\n        Wednesday: [],\n        Thursday: [],\n        Friday: [],\n        Saturday: [],\n    };\n    tutorDetails.map(eachTutor => {\n        eachTutor.schedule.map(eachDay => {\n            var dayForTutor = eachDay.day;\n            weekMap[dayForTutor].push(eachTutor);\n        })\n    })\n    return weekMap;\n}\n\n// This function checks the tutoring schedule for a particular day\nconst dataToSend = () => {\n    const dateRightNow = new Date();\n    var currentData = []\n    tutorDetails.map(eachTutor => {\n        if (checkDay(eachTutor)) {\n            //Makes a copy of the object so that only today's times are shown\n            var toAppend = {};\n            toAppend.name = eachTutor.name;\n            toAppend.location = eachTutor.location;\n            toAppend.password = eachTutor.password;\n            toAppend.subjects = eachTutor.subjects;\n            toAppend.schedule = [];\n            eachTutor.schedule.map(eachDay => {\n                if (dateRightNow.getDay() === convertDay(eachDay.day)) {\n                    toAppend.schedule.push({ \"day\": eachDay.day, \"time\": eachDay.time })\n                }\n            })\n            currentData.push(toAppend);\n        }\n    })\n    return currentData;\n}\n\nconst checkDay = (specificTutor) => {\n    const currentDate = new Date();\n    var toSend = false;\n    specificTutor.schedule.map(scheduleDetail => {\n        var scheduleHour = parseInt(scheduleDetail.time.split(\":\")[0]);\n        var scheduleMinute = parseInt(scheduleDetail.time.split(\":\")[1]);\n        var scheduleTime = scheduleHour * 60 + scheduleMinute;\n        var currentHour = currentDate.getHours();\n        var currentMinute = currentDate.getMinutes();\n        var currentTimeinMinutes = currentHour * 60 + currentMinute;\n        if (currentDate.getDay() === convertDay(scheduleDetail.day)) {\n            if (currentTimeinMinutes < scheduleTime + 60) {\n                toSend = true;\n            }\n        }\n    })\n\n    return toSend;\n}\n\nconst convertDay = (dateofInterest) => {\n    if (dateofInterest === \"Sunday\") return 0;\n    else if (dateofInterest === \"Monday\") return 1;\n    else if (dateofInterest === \"Tuesday\") return 2;\n    else if (dateofInterest === \"Wednesday\") return 3;\n    else if (dateofInterest === \"Thursday\") return 4;\n    else if (dateofInterest === \"Friday\") return 5;\n    else if (dateofInterest === \"Saturday\") return 6;\n}\n\n\n\nexport default tutorDetails;\nexport { dataToSend };\nexport { weeklySchedule };"]},"metadata":{},"sourceType":"module"}