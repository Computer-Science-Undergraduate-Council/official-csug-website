{"ast":null,"code":"const tutorDetails = []; // This function checks the tutoring schedule for the week\n\nconst weeklySchedule = () => {\n  var weekMap = {\n    Sunday: [],\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: []\n  };\n  tutorDetails.map(eachTutor => {\n    eachTutor.schedule.map(eachDay => {\n      var dayForTutor = eachDay.day;\n      weekMap[dayForTutor].push(eachTutor);\n    });\n  });\n  return weekMap;\n}; // This function checks the tutoring schedule for a particular day\n\n\nconst dataToSend = () => {\n  const dateRightNow = new Date();\n  var currentData = [];\n  tutorDetails.map(eachTutor => {\n    if (checkDay(eachTutor)) {\n      //Makes a copy of the object so that only today's times are shown\n      var toAppend = {};\n      toAppend.name = eachTutor.name;\n      toAppend.location = eachTutor.location;\n      toAppend.password = eachTutor.password;\n      toAppend.subjects = eachTutor.subjects;\n      toAppend.schedule = [];\n      eachTutor.schedule.map(eachDay => {\n        if (dateRightNow.getDay() === convertDay(eachDay.day)) {\n          toAppend.schedule.push({\n            \"day\": eachDay.day,\n            \"time\": eachDay.time\n          });\n        }\n      });\n      currentData.push(toAppend);\n    }\n  });\n  return currentData;\n};\n\nconst checkDay = specificTutor => {\n  const currentDate = new Date();\n  var toSend = false;\n  specificTutor.schedule.map(scheduleDetail => {\n    var scheduleHour = parseInt(scheduleDetail.time.split(\":\")[0]);\n    var scheduleMinute = parseInt(scheduleDetail.time.split(\":\")[1]);\n    var scheduleTime = scheduleHour * 60 + scheduleMinute;\n    var currentHour = currentDate.getHours();\n    var currentMinute = currentDate.getMinutes();\n    var currentTimeinMinutes = currentHour * 60 + currentMinute;\n\n    if (currentDate.getDay() === convertDay(scheduleDetail.day)) {\n      if (currentTimeinMinutes < scheduleTime + 60) {\n        toSend = true;\n      }\n    }\n  });\n  return toSend;\n};\n\nconst convertDay = dateofInterest => {\n  if (dateofInterest === \"Sunday\") return 0;else if (dateofInterest === \"Monday\") return 1;else if (dateofInterest === \"Tuesday\") return 2;else if (dateofInterest === \"Wednesday\") return 3;else if (dateofInterest === \"Thursday\") return 4;else if (dateofInterest === \"Friday\") return 5;else if (dateofInterest === \"Saturday\") return 6;\n};\n\nexport default tutorDetails;\nexport { dataToSend };\nexport { weeklySchedule };","map":{"version":3,"sources":["/Users/gigipan/Desktop/official-csug-website/src/assets/Components/TutoringComponent/index.data.jsx"],"names":["tutorDetails","weeklySchedule","weekMap","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","map","eachTutor","schedule","eachDay","dayForTutor","day","push","dataToSend","dateRightNow","Date","currentData","checkDay","toAppend","name","location","password","subjects","getDay","convertDay","time","specificTutor","currentDate","toSend","scheduleDetail","scheduleHour","parseInt","split","scheduleMinute","scheduleTime","currentHour","getHours","currentMinute","getMinutes","currentTimeinMinutes","dateofInterest"],"mappings":"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","sourcesContent":["const tutorDetails = [\n]\n// This function checks the tutoring schedule for the week\nconst weeklySchedule = () => {\n    var weekMap = {\n        Sunday: [],\n        Monday: [],\n        Tuesday: [],\n        Wednesday: [],\n        Thursday: [],\n        Friday: [],\n        Saturday: [],\n    };\n    tutorDetails.map(eachTutor => {\n        eachTutor.schedule.map(eachDay => {\n            var dayForTutor = eachDay.day;\n            weekMap[dayForTutor].push(eachTutor);\n        })\n    })\n    return weekMap;\n}\n\n// This function checks the tutoring schedule for a particular day\nconst dataToSend = () => {\n    const dateRightNow = new Date();\n    var currentData = []\n    tutorDetails.map(eachTutor => {\n        if (checkDay(eachTutor)) {\n            //Makes a copy of the object so that only today's times are shown\n            var toAppend = {};\n            toAppend.name = eachTutor.name;\n            toAppend.location = eachTutor.location;\n            toAppend.password = eachTutor.password;\n            toAppend.subjects = eachTutor.subjects;\n            toAppend.schedule = [];\n            eachTutor.schedule.map(eachDay => {\n                if (dateRightNow.getDay() === convertDay(eachDay.day)) {\n                    toAppend.schedule.push({ \"day\": eachDay.day, \"time\": eachDay.time })\n                }\n            })\n            currentData.push(toAppend);\n        }\n    })\n    return currentData;\n}\n\nconst checkDay = (specificTutor) => {\n    const currentDate = new Date();\n    var toSend = false;\n    specificTutor.schedule.map(scheduleDetail => {\n        var scheduleHour = parseInt(scheduleDetail.time.split(\":\")[0]);\n        var scheduleMinute = parseInt(scheduleDetail.time.split(\":\")[1]);\n        var scheduleTime = scheduleHour * 60 + scheduleMinute;\n        var currentHour = currentDate.getHours();\n        var currentMinute = currentDate.getMinutes();\n        var currentTimeinMinutes = currentHour * 60 + currentMinute;\n        if (currentDate.getDay() === convertDay(scheduleDetail.day)) {\n            if (currentTimeinMinutes < scheduleTime + 60) {\n                toSend = true;\n            }\n        }\n    })\n\n    return toSend;\n}\n\nconst convertDay = (dateofInterest) => {\n    if (dateofInterest === \"Sunday\") return 0;\n    else if (dateofInterest === \"Monday\") return 1;\n    else if (dateofInterest === \"Tuesday\") return 2;\n    else if (dateofInterest === \"Wednesday\") return 3;\n    else if (dateofInterest === \"Thursday\") return 4;\n    else if (dateofInterest === \"Friday\") return 5;\n    else if (dateofInterest === \"Saturday\") return 6;\n}\n\n\n\nexport default tutorDetails;\nexport { dataToSend };\nexport { weeklySchedule };"]},"metadata":{},"sourceType":"module"}