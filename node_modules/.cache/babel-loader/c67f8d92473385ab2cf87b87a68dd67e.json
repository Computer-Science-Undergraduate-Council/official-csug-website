{"ast":null,"code":"const tutorDetails = [// MONDAY\n{\n  name: \"Shunzhi Yu\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"11:00-12:30\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n}, {\n  name: \"Elias Haddad\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"11:00-13:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240'\n}, {\n  name: \"Xi Chen\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"13:00-15:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n}, {\n  name: \"Ashaz Rahman\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"14:00-16:00\"\n  }],\n  subjects: 'CSC 161, MATH 141/161'\n}, {\n  name: \"Amy Yu\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"15:00-17:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n}, {\n  name: \"Bob Wang\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"17:00-19:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 240, MATH 141/161, MATH 142/162, MATH 150, MATH/STT 201'\n}, //Tuesday\n{\n  name: \"Emily Lin\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"12:00-13:00\"\n  }],\n  subjects: 'CSC 161, CSC 171'\n}, {\n  name: \"Emma Buller\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"12:00-13:00\"\n  }],\n  subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n}, {\n  name: \"Aryan Raj Dhawan\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"12:00-13:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, {\n  name: \"Dylan McKellips\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"14:00-15:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240, CSC 242, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165, MATH/STT 201'\n}, {\n  name: \"Fernando Bedoya\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"15:00-17:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 173, CSC 242'\n}, {\n  name: \"Tora Ozawa\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"14:00-15:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, {\n  name: \"Zachary Tan\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"14:00-15:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n}, {\n  name: \"Desmond Wang\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"15:30-16:30\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, {\n  name: \"Jerry Hu\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Tuesday\",\n    time: \"16:00-18:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n}, //Wednesday\n{\n  name: \"Shunzhi Yu\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Wednesday\",\n    time: \"12:00-14:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n}, //Thursday\n{\n  name: \"Lucy Yang\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"11:00-12:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 173, CSC 262'\n}, {\n  name: \"Emma Buller\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"12:00-13:00\"\n  }],\n  subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n}, {\n  name: \"Aryan Raj Dhawan\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursaday\",\n    time: \"12:00-13:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, {\n  name: \"Wendy Humphreys\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"11:00-13:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, MATH 141/161, MATH 142/162'\n}, {\n  name: \"Victoria Li\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"13:00-15:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172'\n}, {\n  name: \"Desmond Wang\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"15:30-16:30\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, {\n  name: \"Owen Tian\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"15:30-17:30\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 282, MATH 150'\n}, {\n  name: \"Tora Ozawa\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Thursday\",\n    time: \"16:00-17:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n}, //Friday\n{\n  name: \"Wentao Jiang\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Friday\",\n    time: \"13:30-14:30\"\n  }],\n  subjects: 'CSC 161, CSC 210, CSC 240, CSC 242, CSC 254, CSC 282, CSC 245, DSCC 201, CSC 170, STAT 212/213, MATH 150, MATH 165, MATH/STT 201'\n}, {\n  name: \"Zachary Tan\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Friday\",\n    time: \"14:00-15:00\"\n  }],\n  subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n}, {\n  name: \"Xi Chen\",\n  location: \"Wegmans 2007\",\n  password: \"\",\n  schedule: [{\n    day: \"Monday\",\n    time: \"17:00-18:00\"\n  }],\n  subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n}]; // This function checks the tutoring schedule for the week\n\nconst weeklySchedule = () => {\n  var weekMap = {\n    Sunday: [],\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: []\n  };\n  tutorDetails.map(eachTutor => {\n    eachTutor.schedule.map(eachDay => {\n      var dayForTutor = eachDay.day;\n      weekMap[dayForTutor].push(eachTutor);\n    });\n  });\n  return weekMap;\n}; // This function checks the tutoring schedule for a particular day\n\n\nconst dataToSend = () => {\n  const dateRightNow = new Date();\n  var currentData = [];\n  tutorDetails.map(eachTutor => {\n    if (checkDay(eachTutor)) {\n      //Makes a copy of the object so that only today's times are shown\n      var toAppend = {};\n      toAppend.name = eachTutor.name;\n      toAppend.location = eachTutor.location;\n      toAppend.password = eachTutor.password;\n      toAppend.subjects = eachTutor.subjects;\n      toAppend.schedule = [];\n      eachTutor.schedule.map(eachDay => {\n        if (dateRightNow.getDay() === convertDay(eachDay.day)) {\n          toAppend.schedule.push({\n            \"day\": eachDay.day,\n            \"time\": eachDay.time\n          });\n        }\n      });\n      currentData.push(toAppend);\n    }\n  });\n  return currentData;\n};\n\nconst checkDay = specificTutor => {\n  const currentDate = new Date();\n  var toSend = false;\n  specificTutor.schedule.map(scheduleDetail => {\n    var scheduleHour = parseInt(scheduleDetail.time.split(\":\")[0]);\n    var scheduleMinute = parseInt(scheduleDetail.time.split(\":\")[1]);\n    var scheduleTime = scheduleHour * 60 + scheduleMinute;\n    var currentHour = currentDate.getHours();\n    var currentMinute = currentDate.getMinutes();\n    var currentTimeinMinutes = currentHour * 60 + currentMinute;\n\n    if (currentDate.getDay() === convertDay(scheduleDetail.day)) {\n      if (currentTimeinMinutes < scheduleTime + 60) {\n        toSend = true;\n      }\n    }\n  });\n  return toSend;\n};\n\nconst convertDay = dateofInterest => {\n  if (dateofInterest === \"Sunday\") return 0;else if (dateofInterest === \"Monday\") return 1;else if (dateofInterest === \"Tuesday\") return 2;else if (dateofInterest === \"Wednesday\") return 3;else if (dateofInterest === \"Thursday\") return 4;else if (dateofInterest === \"Friday\") return 5;else if (dateofInterest === \"Saturday\") return 6;\n};\n\nexport default tutorDetails;\nexport { dataToSend };\nexport { weeklySchedule };","map":{"version":3,"sources":["/Users/gigipan/Desktop/official-csug-website/src/assets/Components/TutoringComponent/index.data.jsx"],"names":["tutorDetails","name","location","password","schedule","day","time","subjects","weeklySchedule","weekMap","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","map","eachTutor","eachDay","dayForTutor","push","dataToSend","dateRightNow","Date","currentData","checkDay","toAppend","getDay","convertDay","specificTutor","currentDate","toSend","scheduleDetail","scheduleHour","parseInt","split","scheduleMinute","scheduleTime","currentHour","getHours","currentMinute","getMinutes","currentTimeinMinutes","dateofInterest"],"mappings":"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","sourcesContent":["const tutorDetails = [\n    // MONDAY\n    {\n        name: \"Shunzhi Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"11:00-12:30\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n    },\n    {\n        name: \"Elias Haddad\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"11:00-13:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240'\n    },\n    {\n        name: \"Xi Chen\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"13:00-15:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n    },\n    {\n        name: \"Ashaz Rahman\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"14:00-16:00\" }],\n        subjects: 'CSC 161, MATH 141/161'\n    },\n    {\n        name: \"Amy Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"15:00-17:00\" }],\n        subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n    },\n    {\n        name: \"Bob Wang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"17:00-19:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 240, MATH 141/161, MATH 142/162, MATH 150, MATH/STT 201'\n    },\n\n\n    //Tuesday\n    {\n        name: \"Emily Lin\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171'\n    },\n    {\n        name: \"Emma Buller\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n    },\n    {\n        name: \"Aryan Raj Dhawan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Dylan McKellips\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 240, CSC 242, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165, MATH/STT 201'\n    },\n    {\n        name: \"Fernando Bedoya\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"15:00-17:00\"}],\n        subjects: 'CSC 171, CSC 172, CSC 173, CSC 242'\n    },\n    {\n        name: \"Tora Ozawa\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Zachary Tan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n    },\n    {\n        name: \"Desmond Wang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"15:30-16:30\"}],\n        subjects: 'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Jerry Hu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Tuesday\", time: \"16:00-18:00\"}],\n        subjects: 'CSC 171, CSC 172, MATH 150, MATH 165'\n    },\n    \n    //Wednesday\n    {\n        name: \"Shunzhi Yu\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Wednesday\", time: \"12:00-14:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 208, MATH 141/161, MATH 142/162, MATH 150, MATH 165, MATH/STT 201, PHYS 121, PHYS 113'\n    },\n\n    //Thursday\n    {\n        name: \"Lucy Yang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"11:00-12:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 173, CSC 262'\n    },\n    {\n        name: \"Emma Buller\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 172, CSC 173, CSC 229, CSC 242, MATH 150'\n    },\n    {\n        name: \"Aryan Raj Dhawan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursaday\", time: \"12:00-13:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Wendy Humphreys\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"11:00-13:00\"}],\n        subjects: 'CSC 171, CSC 172, MATH 141/161, MATH 142/162'\n    },\n    {\n        name: \"Victoria Li\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"13:00-15:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172'\n    },\n    {\n        name: \"Desmond Wang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"15:30-16:30\"}],\n        subjects: 'CSC 171, CSC 172, CSC 252, CSC 261, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n    {\n        name: \"Owen Tian\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"15:30-17:30\"}],\n        subjects: 'CSC 171, CSC 172, CSC 282, MATH 150'\n    },\n    {\n        name: \"Tora Ozawa\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Thursday\", time: \"16:00-17:00\"}],\n        subjects: 'CSC 161, CSC 171, CSC 172, CSC 173, CSC 242, CSC 252, CSC 254, CSC 282, MATH 150, MATH 141/161, MATH 142/162, MATH 165'\n    },\n\n    //Friday\n    {\n        name: \"Wentao Jiang\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Friday\", time: \"13:30-14:30\"}],\n        subjects: 'CSC 161, CSC 210, CSC 240, CSC 242, CSC 254, CSC 282, CSC 245, DSCC 201, CSC 170, STAT 212/213, MATH 150, MATH 165, MATH/STT 201'\n    },\n    {\n        name: \"Zachary Tan\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{day: \"Friday\", time: \"14:00-15:00\"}],\n        subjects: 'CSC 171, CSC 172, CSC 173, CSC 252, MATH 141/161, MATH 142/162, MATH 150, MATH 165'\n    },\n    {\n        name: \"Xi Chen\",\n        location: \"Wegmans 2007\",\n        password: \"\",\n        schedule: [{ day: \"Monday\", time: \"17:00-18:00\" }],\n        subjects: 'CSC 161, CSC 171, CSC 172, MATH 150'\n    },\n\n]\n// This function checks the tutoring schedule for the week\nconst weeklySchedule = () => {\n    var weekMap = {\n        Sunday: [],\n        Monday: [],\n        Tuesday: [],\n        Wednesday: [],\n        Thursday: [],\n        Friday: [],\n        Saturday: [],\n    };\n    tutorDetails.map(eachTutor => {\n        eachTutor.schedule.map(eachDay => {\n            var dayForTutor = eachDay.day;\n            weekMap[dayForTutor].push(eachTutor);\n        })\n    })\n    return weekMap;\n}\n\n// This function checks the tutoring schedule for a particular day\nconst dataToSend = () => {\n    const dateRightNow = new Date();\n    var currentData = []\n    tutorDetails.map(eachTutor => {\n        if (checkDay(eachTutor)) {\n            //Makes a copy of the object so that only today's times are shown\n            var toAppend = {};\n            toAppend.name = eachTutor.name;\n            toAppend.location = eachTutor.location;\n            toAppend.password = eachTutor.password;\n            toAppend.subjects = eachTutor.subjects;\n            toAppend.schedule = [];\n            eachTutor.schedule.map(eachDay => {\n                if (dateRightNow.getDay() === convertDay(eachDay.day)) {\n                    toAppend.schedule.push({ \"day\": eachDay.day, \"time\": eachDay.time })\n                }\n            })\n            currentData.push(toAppend);\n        }\n    })\n    return currentData;\n}\n\nconst checkDay = (specificTutor) => {\n    const currentDate = new Date();\n    var toSend = false;\n    specificTutor.schedule.map(scheduleDetail => {\n        var scheduleHour = parseInt(scheduleDetail.time.split(\":\")[0]);\n        var scheduleMinute = parseInt(scheduleDetail.time.split(\":\")[1]);\n        var scheduleTime = scheduleHour * 60 + scheduleMinute;\n        var currentHour = currentDate.getHours();\n        var currentMinute = currentDate.getMinutes();\n        var currentTimeinMinutes = currentHour * 60 + currentMinute;\n        if (currentDate.getDay() === convertDay(scheduleDetail.day)) {\n            if (currentTimeinMinutes < scheduleTime + 60) {\n                toSend = true;\n            }\n        }\n    })\n\n    return toSend;\n}\n\nconst convertDay = (dateofInterest) => {\n    if (dateofInterest === \"Sunday\") return 0;\n    else if (dateofInterest === \"Monday\") return 1;\n    else if (dateofInterest === \"Tuesday\") return 2;\n    else if (dateofInterest === \"Wednesday\") return 3;\n    else if (dateofInterest === \"Thursday\") return 4;\n    else if (dateofInterest === \"Friday\") return 5;\n    else if (dateofInterest === \"Saturday\") return 6;\n}\n\n\n\nexport default tutorDetails;\nexport { dataToSend };\nexport { weeklySchedule };"]},"metadata":{},"sourceType":"module"}